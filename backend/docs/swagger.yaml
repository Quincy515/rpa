definitions:
  controller.ResponseData:
    properties:
      code:
        description: 业务状态码
        type: integer
      data:
        description: 数据
        type: object
      message:
        description: 提示信息
        type: string
    type: object
  model.AccountByEmail:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      password:
        type: string
    type: object
  model.MiniAccount:
    properties:
      ip:
        type: string
      js_code:
        type: string
      mobile:
        type: string
      userInfo:
        properties:
          avatarURL:
            type: string
          city:
            type: string
          country:
            type: string
          gender:
            type: integer
          language:
            type: string
          nickName:
            type: string
          province:
            type: string
        type: object
    type: object
info:
  contact: {}
  license: {}
paths:
  /api/v1/audio:
    post:
      consumes:
      - application/json
      description: 可以把上传的图片文件进行文字识别、文字处理、语音合成返回MP3文件
      parameters:
      - description: 文件名
        in: query
        name: fileName
        required: true
        type: string
      - description: Bearer ***
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code": 1000, "message": "success", "data": { "uri": ""} }'
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: 图片识别语音播报
      tags:
      - audio
  /api/v1/email-login:
    post:
      consumes:
      - application/json
      description: 通过邮箱密码进行登录
      parameters:
      - description: 需要提交的登录信息
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.AccountByEmail'
      produces:
      - application/json
      responses:
        "200":
          description: 'code": 1000, "message": "success", "data": null }'
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: 邮箱登录
      tags:
      - accounts
  /api/v1/email-register:
    post:
      consumes:
      - application/json
      description: 通过邮箱创建新用户
      parameters:
      - description: 需要提交的注册信息
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.AccountByEmail'
      produces:
      - application/json
      responses:
        "200":
          description: 'code": 1000, "message": "success", "data": null }'
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: 邮箱注册
      tags:
      - accounts
  /api/v1/mini-login:
    post:
      consumes:
      - application/json
      description: 微信小程序的注册登录逻辑
      parameters:
      - description: 微信小程序注册登录请求转结构体
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.MiniAccount'
      produces:
      - application/json
      responses:
        "200":
          description: 'code": 1000, "message": "success", "data": null }'
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: 微信小程序注册登录
      tags:
      - accounts
  /api/v1/mini-logout:
    get:
      description: 清除session缓存
      responses:
        "200": {}
      summary: 登出
      tags:
      - accounts
  /api/v1/u/mini-user:
    post:
      description: 更新用户信息
      parameters:
      - description: 微信小程序注册登录请求转结构体
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.MiniAccount'
      responses:
        "200":
          description: 'code": 1000, "message": "success", "data": model.Account }'
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: 微信小程序用户授权
      tags:
      - accounts
  /api/v1/upload:
    post:
      consumes:
      - multipart/form-data
      description: 可以上传图片、视频文件
      parameters:
      - description: 文件
        in: formData
        name: file
        required: true
        type: file
      - description: Bearer ***
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code": 1000, "message": "success", "data": { "uri": ""} }'
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: 上传文件
      tags:
      - file
swagger: "2.0"
